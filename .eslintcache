[{"C:\\workspace\\sns-frontend\\src\\index.js":"1","C:\\workspace\\sns-frontend\\src\\App.js":"2","C:\\workspace\\sns-frontend\\src\\redux\\reducks.js":"3","C:\\workspace\\sns-frontend\\src\\rootPage.js":"4","C:\\workspace\\sns-frontend\\src\\testPage.js":"5","C:\\workspace\\sns-frontend\\src\\auth\\SignIn.js":"6","C:\\workspace\\sns-frontend\\src\\auth\\SignUp.js":"7"},{"size":459,"mtime":1620297627148,"results":"8","hashOfConfig":"9"},{"size":658,"mtime":1620543937347,"results":"10","hashOfConfig":"9"},{"size":3010,"mtime":1620547931348,"results":"11","hashOfConfig":"9"},{"size":514,"mtime":1620039656048,"results":"12","hashOfConfig":"9"},{"size":1282,"mtime":1620548026831,"results":"13","hashOfConfig":"9"},{"size":3921,"mtime":1620546423443,"results":"14","hashOfConfig":"9"},{"size":3808,"mtime":1620545750945,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"pyzyns",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\workspace\\sns-frontend\\src\\index.js",[],["33","34"],"C:\\workspace\\sns-frontend\\src\\App.js",["35"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport RootPage from './rootPage';\r\nimport SignUp from './auth/SignUp';\r\nimport SignIn from './auth/SignIn';\r\nimport TestPage from './testPage';\r\n\r\nexport default function App() {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path='/' exact={true} component={RootPage} />\r\n                <Route path='/signup' exact={true} component={SignUp} />\r\n                <Route path='/signin' exact={true} component={SignIn} />\r\n                <Route path='/temp' exact={true} component={TestPage} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n","C:\\workspace\\sns-frontend\\src\\redux\\reducks.js",[],"C:\\workspace\\sns-frontend\\src\\rootPage.js",[],"C:\\workspace\\sns-frontend\\src\\testPage.js",["36"],"C:\\workspace\\sns-frontend\\src\\auth\\SignIn.js",["37"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInThunk } from '../redux/reducks';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    //const userState = useSelector((state) => state.snsReducer);\r\n    //console.log(`userState: ${JSON.stringify(userState)}`);\r\n\r\n    function handleChange(e) {\r\n        setLoginData({...loginData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        dispatch(signInThunk(loginData, history));\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={(e) => handleSubmit(e)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link onClick={() => history.push('/signup')} variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n}\r\n","C:\\workspace\\sns-frontend\\src\\auth\\SignUp.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":25,"nodeType":"44","messageId":"45","endLine":2,"endColumn":33},{"ruleId":"46","severity":1,"message":"47","line":20,"column":8,"nodeType":"48","endLine":20,"endColumn":10,"suggestions":"49"},{"ruleId":"42","severity":1,"message":"50","line":15,"column":23,"nodeType":"44","messageId":"45","endLine":15,"endColumn":34},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userState.userData.msg'. Either include them or remove the dependency array.","ArrayExpression",["53"],"'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [dispatch, history, userState.userData.msg]",{"range":"56","text":"57"},[717,719],"[dispatch, history, userState.userData.msg]"]