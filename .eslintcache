[{"D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\index.js":"1","D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\App.js":"2","D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\redux\\reducks.js":"3","D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\rootPage.js":"4","D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\testPage.js":"5","D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\auth\\SignUp.js":"6","D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\auth\\SignIn.js":"7"},{"size":461,"mtime":1621170681616,"results":"8","hashOfConfig":"9"},{"size":701,"mtime":1620602932196,"results":"10","hashOfConfig":"9"},{"size":3090,"mtime":1621170738674,"results":"11","hashOfConfig":"9"},{"size":514,"mtime":1620127649606,"results":"12","hashOfConfig":"9"},{"size":1282,"mtime":1620602932198,"results":"13","hashOfConfig":"9"},{"size":3808,"mtime":1620203636545,"results":"14","hashOfConfig":"9"},{"size":4212,"mtime":1620604175704,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m4zqhj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},"D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\index.js",[],"D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\App.js",[],["33","34"],"D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\redux\\reducks.js",["35"],"D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\rootPage.js",[],"D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\testPage.js",["36"],"import React, { useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { tempThunk } from './redux/reducks';\r\n\r\n\r\nexport default function TestPage() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const userState = useSelector((state) => state.snsReducer);\r\n\r\n    useEffect(() => {\r\n        if(userState.userData.msg === undefined) {\r\n            console.log('here');\r\n            dispatch(tempThunk({}, history));\r\n        }\r\n    }, []);\r\n\r\n    if(userState.authData?.token === undefined) {\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div>\r\n                    <Typography component=\"h2\">\r\n                        not authenticated\r\n                    </Typography>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>test page</h2>\r\n            <p>{userState.userData.msg}</p>\r\n            <p>{userState.userData.date}</p>\r\n        </div>\r\n    );\r\n};","D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\auth\\SignUp.js",[],"D:\\Users\\Innfiswindow\\source\\repos\\sns-frontend\\src\\auth\\SignIn.js",["37"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInThunk } from '../redux/reducks';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const userState = useSelector((state) => state.snsReducer);\r\n\r\n    console.log(`userState: ${JSON.stringify(userState)}`);\r\n\r\n    useEffect(() => {\r\n      console.log('in useEffect');\r\n      if(loginData.email === '') {\r\n        console.log('before setLoginData');\r\n        setLoginData({ email: userState.authData.email });\r\n      }\r\n    }, []);\r\n\r\n    function handleChange(e) {\r\n        setLoginData({...loginData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        dispatch(signInThunk(loginData, history));\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={(e) => handleSubmit(e)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => handleChange(e)} \r\n              defaultValue={loginData.email}>\r\n            </TextField>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link onClick={() => history.push('/signup')} variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n}\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":null,"fatal":true,"severity":2,"message":"42","line":8,"column":28},{"ruleId":"43","severity":1,"message":"44","line":20,"column":8,"nodeType":"45","endLine":20,"endColumn":10,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":57,"column":8,"nodeType":"45","endLine":57,"endColumn":10,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 |\u001b[39m dotenv\u001b[33m.\u001b[39mconfig()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m console\u001b[33m.\u001b[39mlog(\u001b[32m`backendUrl: ${}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mSIGNUP_RESP\u001b[39m \u001b[33m=\u001b[39m \u001b[32m'SIGNUP_RESP'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userState.userData.msg'. Either include them or remove the dependency array.","ArrayExpression",["51"],"React Hook useEffect has missing dependencies: 'loginData.email' and 'userState.authData.email'. Either include them or remove the dependency array.",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Update the dependencies array to be: [dispatch, history, userState.userData.msg]",{"range":"57","text":"58"},"Update the dependencies array to be: [loginData.email, userState.authData.email]",{"range":"59","text":"60"},[717,719],"[dispatch, history, userState.userData.msg]",[1879,1881],"[loginData.email, userState.authData.email]"]