[{"C:\\workspace\\sns-frontend\\src\\index.js":"1","C:\\workspace\\sns-frontend\\src\\App.js":"2","C:\\workspace\\sns-frontend\\src\\redux\\reducks.js":"3","C:\\workspace\\sns-frontend\\src\\auth\\SignUp.js":"4","C:\\workspace\\sns-frontend\\src\\timeline\\timelineCards.js":"5","C:\\workspace\\sns-frontend\\src\\auth\\SignIn.js":"6","C:\\workspace\\sns-frontend\\src\\timeline\\timelineUnit.js":"7","C:\\workspace\\sns-frontend\\src\\mainpage\\entry.js":"8","C:\\workspace\\sns-frontend\\src\\timeline\\timelineForm.js":"9","C:\\workspace\\sns-frontend\\src\\mainpage\\drawer.js":"10","C:\\workspace\\sns-frontend\\src\\mainpage\\appbar.js":"11","C:\\workspace\\sns-frontend\\src\\mainpage\\footer.js":"12"},{"size":461,"mtime":1621249275869,"results":"13","hashOfConfig":"14"},{"size":750,"mtime":1629532865346,"results":"15","hashOfConfig":"14"},{"size":5202,"mtime":1633941054500,"results":"16","hashOfConfig":"14"},{"size":3808,"mtime":1620545750945,"results":"17","hashOfConfig":"14"},{"size":1121,"mtime":1632231757021,"results":"18","hashOfConfig":"14"},{"size":3836,"mtime":1628765968050,"results":"19","hashOfConfig":"14"},{"size":2834,"mtime":1628934300303,"results":"20","hashOfConfig":"14"},{"size":2542,"mtime":1632231757005,"results":"21","hashOfConfig":"14"},{"size":2447,"mtime":1633166210506,"results":"22","hashOfConfig":"14"},{"size":1249,"mtime":1632231757001,"results":"23","hashOfConfig":"14"},{"size":4015,"mtime":1632231756998,"results":"24","hashOfConfig":"14"},{"size":631,"mtime":1632231757005,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pyzyns",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\workspace\\sns-frontend\\src\\index.js",[],["53","54"],"C:\\workspace\\sns-frontend\\src\\App.js",[],"C:\\workspace\\sns-frontend\\src\\redux\\reducks.js",["55"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\n\r\ndotenv.config();\r\n\r\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst SIGNUP_RESP = 'SIGNUP_RESP';\r\nconst SIGNIN_RESP = 'SIGNIN_RESP';\r\nconst LOAD_TIMELINE_RESP = 'LOAD_TIMELINE_RESP';\r\nconst SUBMIT_TIMELINE_RESP = 'SUBMIT_TIMELINE_RESP';\r\nconst ERROR = 'ERROR';\r\nconst TEMP_RESP = 'TEMP_RESP';\r\nconst TOGGLE_DRAWER_VISIBILITY = 'TOGGLE_DRAWER_VISIBILITY';\r\n\r\n//state model\r\nconst initialState = {\r\n    authData: {\r\n        email: '',\r\n        token: '',\r\n    },\r\n    errorMsg: '',\r\n    userData: {},\r\n    timeline: [{\r\n        authorId: 'innfi',\r\n        text: 'timeline starts from here'\r\n    }, {\r\n        authorId: 'ennfi',\r\n        text: 'congrats!'\r\n    }], \r\n    drawerVisible: false\r\n};\r\n\r\n//reducers\r\nconst snsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SIGNUP_RESP:\r\n            return {\r\n                ...state, \r\n                authData: action.payload.authData\r\n            };\r\n        case SIGNIN_RESP: \r\n            return {\r\n                ...state, \r\n                authData: action.payload.authData\r\n            };\r\n        case ERROR:\r\n            return {\r\n                ...state, \r\n                errorMsg: action.payload.errorMsg\r\n            };\r\n        case LOAD_TIMELINE_RESP:\r\n            return {\r\n                ...state,\r\n                timeline: action.payload.userTimeline //fixme: aggregate\r\n            };\r\n        case SUBMIT_TIMELINE_RESP:\r\n            return {\r\n                ...state,\r\n                timeline: [...state.timeline, action.payload.newTimeline] \r\n            };\r\n        case TEMP_RESP:\r\n            return {\r\n                ...state,\r\n                userData: action.payload.userData\r\n            };\r\n        case TOGGLE_DRAWER_VISIBILITY:\r\n            return {\r\n                ...state,\r\n                drawerVisible: action.payload.toggleDrawer\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const rootReducer = combineReducers({snsReducer})\r\n\r\n//actions \r\nexport const signUpThunk = (data, history) => async(dispatch, getState) => {\r\n    axios.post(`${backendUrl}/signup`, data)\r\n    .then((value) => {\r\n        const response = value.data;\r\n\r\n        dispatch({\r\n            type: SIGNUP_RESP,\r\n            payload: {\r\n                authData: {\r\n                    email: response.email\r\n                }\r\n            }\r\n        })\r\n\r\n        history.push('/signin');\r\n    }) \r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ERROR, \r\n            payload: {\r\n                errorMsg: 'signUpThunk failed'\r\n            }\r\n        });\r\n\r\n        history.push('/signup');\r\n    });\r\n};\r\n\r\nexport const signInThunk = (data, history) => async (dispatch, getState) => {\r\n    axios.post(`${backendUrl}/signin`, data) \r\n    .then((value) => {\r\n        const response = value.data;\r\n\r\n        dispatch({\r\n            type: SIGNIN_RESP,\r\n            payload: {\r\n                authData: {\r\n                    email: response.email,\r\n                    token: response.jwtToken\r\n                }\r\n            }\r\n        }); \r\n\r\n        history.push('/entry');\r\n    });\r\n};\r\n\r\n//localTimeline\r\nexport const loadTimelineThunk = (data, history) => async(dispatch, getState) => {\r\n    const userId = data.userId;\r\n\r\n    axios.get(`${backendUrl}/timeline/${userId}`, {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${getState().snsReducer.authData.token}`\r\n        },\r\n        params: { //fixme\r\n            page: 0, \r\n            limit: 3\r\n        }\r\n    })\r\n    .then((value) => {\r\n        const response = value.data;\r\n\r\n        dispatch({\r\n            type: LOAD_TIMELINE_RESP,\r\n            payload: {\r\n                userTimeline: response.timeline\r\n            }\r\n        });\r\n\r\n        history.push(`/timeline/${userId}`);\r\n    });\r\n};\r\n\r\n//submitTimeline\r\nexport const submitTimelineThunk = (data, history) => async(dispatch, getState) => {\r\n    axios.post(`${backendUrl}/timeline`, data)\r\n    .then((value) => {\r\n        const response = value.data;\r\n\r\n        dispatch({\r\n            type: SUBMIT_TIMELINE_RESP,\r\n            payload: {\r\n                newTimeline: response.data\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nexport const submitTimelineMediaThunk = \r\n    (data, history) => async (dispatch, getState) => {\r\n    axios.post(`${backendUrl}/timeline2`, data)\r\n    .then((value) => {\r\n        const response = value.data;\r\n\r\n        dispatch({\r\n            type: SUBMIT_TIMELINE_RESP,\r\n            paload: {\r\n                //TODO: handle multipart response \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n//toggleDrawer\r\nexport const toggleDrawer = (toggle) => async(dispatch, getState) => {\r\n    dispatch({\r\n        type: TOGGLE_DRAWER_VISIBILITY,\r\n        payload: {\r\n            toggleDrawer: toggle\r\n        }\r\n    });\r\n};\r\n\r\n//signoutThunk\r\nexport const signoutThunk = (history) => async (dispatch, getState) => {\r\n    //TODO\r\n};\r\n\r\n//store \r\nexport const store = createStore(\r\n    rootReducer, \r\n    applyMiddleware(thunk)\r\n);","C:\\workspace\\sns-frontend\\src\\auth\\SignUp.js",[],"C:\\workspace\\sns-frontend\\src\\timeline\\timelineCards.js",["56"],"C:\\workspace\\sns-frontend\\src\\auth\\SignIn.js",[],"C:\\workspace\\sns-frontend\\src\\timeline\\timelineUnit.js",["57"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardHeader, CardActions, CardContent, \r\n    Button, Typography, Avatar, IconButton, Snackbar } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Favorite, Share } from '@material-ui/icons';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: { maxWidth: 345, marginBottom: 10 },\r\n    avatar: { backgroundColor: red[500] }\r\n});\r\n\r\nexport const TimelineUnit = (timeline, key) => {\r\n    const { authorId, text } = timeline.props;\r\n    const classes = useStyles();\r\n    const [sbOpen, setSbOpen] = useState(false);\r\n\r\n    const handleMoreVertClicked = () => {\r\n        setSbOpen(true);\r\n    };\r\n\r\n    const handleSnackbarClose = (event) => {\r\n        setSbOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <Card className={classes.root}>\r\n            <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"cardAvatar\" className={classes.avatar}>\r\n                        {authorId}\r\n                    </Avatar>\r\n                } \r\n                action={\r\n                    <IconButton aria-label=\"settings\" onClick={handleMoreVertClicked}>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                } \r\n                title={authorId}\r\n                subheader=\"users moment\"\r\n                />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                    {text} \r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <Favorite />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <Share />\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n        <div>\r\n            <Snackbar anchorOrigin={{vertical: 'bottom', horizontal: 'right'}} \r\n                open={sbOpen} autoHideDuration={2000} \r\n                message=\"snackbar opened\" \r\n                action={\r\n                <React.Fragment>\r\n                  <Button color=\"secondary\" size=\"small\" \r\n                    onClick={handleSnackbarClose}>\r\n                      close\r\n                  </Button>  \r\n                  <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" \r\n                    onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                   </IconButton>\r\n                </React.Fragment>\r\n                } \r\n            />\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","C:\\workspace\\sns-frontend\\src\\mainpage\\entry.js",["58","59","60"],"C:\\workspace\\sns-frontend\\src\\timeline\\timelineForm.js",["61"],"C:\\workspace\\sns-frontend\\src\\mainpage\\drawer.js",[],"C:\\workspace\\sns-frontend\\src\\mainpage\\appbar.js",[],"C:\\workspace\\sns-frontend\\src\\mainpage\\footer.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":176,"column":15,"nodeType":"68","messageId":"69","endLine":176,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":25,"column":8,"nodeType":"72","endLine":25,"endColumn":18,"suggestions":"73"},{"ruleId":"66","severity":1,"message":"74","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"75","line":49,"column":11,"nodeType":"68","messageId":"69","endLine":49,"endColumn":19},{"ruleId":"66","severity":1,"message":"76","line":71,"column":7,"nodeType":"68","messageId":"69","endLine":71,"endColumn":19},{"ruleId":"66","severity":1,"message":"77","line":72,"column":11,"nodeType":"68","messageId":"69","endLine":72,"endColumn":18},{"ruleId":"66","severity":1,"message":"78","line":7,"column":36,"nodeType":"68","messageId":"69","endLine":7,"endColumn":55},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailFromRedux' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["81"],"'useEffect' is defined but never used.","'authData' is assigned a value but never used.","'RedirectPage' is assigned a value but never used.","'history' is assigned a value but never used.","'submitTimelineThunk' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [dispatch, emailFromRedux, history]",{"range":"84","text":"85"},[892,902],"[dispatch, emailFromRedux, history]"]